{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport History from \"./History\";\nimport PlayButton from \"./PlayButton\";\n// import \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [audioList, setAudioList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [songPlaying, setSongPlaying] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songTitle, setSongTitle] = useState(null);\n  const [volume, setVolume] = useState(0);\n  const audioRef = useRef(null);\n  const playButton = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.pause();\n        setIsPlaying(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"sm:container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns-1\",\n      children: [/*#__PURE__*/_jsxDEV(History, {\n        currentSong: currentSong,\n        songPlaying: songPlaying,\n        songTitle: songTitle,\n        setCurrentSong: setCurrentSong,\n        setSongPlaying: setSongPlaying,\n        setSongTitle: setSongTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        songTitle: songTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" play-button-content\",\n      children: /*#__PURE__*/_jsxDEV(PlayButton, {\n        playAndPause: playButton,\n        currentSong: currentSong,\n        songPlaying: songPlaying,\n        audioRef: audioRef,\n        volume: volume,\n        setVolume: setVolume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"52hsH4/0IBoJgyq4yQ8S/zbVjDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Col","Container","Row","useState","useEffect","useRef","SearchBar","History","PlayButton","jsxDEV","_jsxDEV","App","_s","audioList","setAudioList","loading","setLoading","error","setError","currentSong","setCurrentSong","songPlaying","setSongPlaying","isPlaying","setIsPlaying","songTitle","setSongTitle","volume","setVolume","audioRef","playButton","current","play","pause","class","children","fileName","_jsxFileName","lineNumber","columnNumber","className","playAndPause","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/App.js"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport History from \"./History\";\nimport PlayButton from \"./PlayButton\";\n// import \"./App.css\";\n\nfunction App() {\n  const [audioList, setAudioList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [songPlaying, setSongPlaying] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songTitle, setSongTitle] = useState(null);\n  const [volume, setVolume] = useState(0);\n  const audioRef = useRef(null);\n\n  const playButton = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.pause();\n        setIsPlaying(true);\n      }\n    }\n  };\n\n  return (\n    <div class=\"sm:container\">\n      <div class=\"columns-1\">\n        <History\n          currentSong={currentSong}\n          songPlaying={songPlaying}\n          songTitle={songTitle}\n          setCurrentSong={setCurrentSong}\n          setSongPlaying={setSongPlaying}\n          setSongTitle={setSongTitle}\n        />\n\n        <SearchBar songTitle={songTitle} />\n      </div>\n      <Row className=\" play-button-content\">\n        <PlayButton\n          playAndPause={playButton}\n          currentSong={currentSong}\n          songPlaying={songPlaying}\n          audioRef={audioRef}\n          volume={volume}\n          setVolume={setVolume}\n        />\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}