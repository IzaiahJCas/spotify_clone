{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\components\\\\SongList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PlayButton from \"../PlayButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongList({\n  switchSongs\n}) {\n  _s();\n  const [audioList, setAudioList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [songPlaying, setSongPlaying] = useState(null);\n  const [songTitle, setSongTitle] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  async function fetchAudioList() {\n    setLoading(true);\n    try {\n      const response = await fetch(\"/song_request\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const result = await response.json();\n      setAudioList(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchAudioList();\n  }, []);\n  const playButton = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.pause();\n        setIsPlaying(true);\n      }\n    }\n  };\n  function switchSongs(item) {\n    if (currentSong === null && songPlaying === null) {\n      setCurrentSong(`/${item.file_name}`);\n      setSongPlaying(null);\n      setSongTitle(item.song_name);\n    } else if (currentSong !== null && songPlaying === null) {\n      setCurrentSong(null);\n      setSongPlaying(`/${item.file_name}`);\n      setSongTitle(item.song_name);\n    } else if (currentSong === null && songPlaying !== null) {\n      setCurrentSong(`/${item.file_name}`);\n      setSongPlaying(null);\n      setSongTitle(item.song_name);\n    } else {\n      console.log(\"bad things\");\n    }\n  }\n  const handleDelete = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/delete_songs\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const result = await response.json();\n      console.log(result);\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Song List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      variant: \"danger\",\n      children: \"Reset Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: audioList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => switchSongs(item),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: item.song_name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), (currentSong || songPlaying) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: audioRef,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: currentSong || songPlaying,\n              type: \"audio/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), \"Your browser does not support the audio element.\"]\n          }, currentSong || songPlaying, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected song: \", songTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(SongList, \"x5pefIML78LPoPZjmmxdIMbCytk=\");\n_c = SongList;\nexport default SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","PlayButton","jsxDEV","_jsxDEV","SongList","switchSongs","_s","audioList","setAudioList","loading","setLoading","error","setError","currentSong","setCurrentSong","songPlaying","setSongPlaying","songTitle","setSongTitle","isPlaying","setIsPlaying","audioRef","fetchAudioList","response","fetch","ok","Error","result","json","message","playButton","current","play","pause","item","file_name","song_name","console","log","handleDelete","e","preventDefault","method","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","map","index","style","cursor","ref","src","type","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/components/SongList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PlayButton from \"../PlayButton\";\r\n\r\nfunction SongList({ switchSongs }) {\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [songPlaying, setSongPlaying] = useState(null);\r\n  const [songTitle, setSongTitle] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  async function fetchAudioList() {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"/song_request\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const result = await response.json();\r\n      setAudioList(result);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAudioList();\r\n  }, []);\r\n\r\n  const playButton = () => {\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        audioRef.current.play();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audioRef.current.pause();\r\n        setIsPlaying(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function switchSongs(item) {\r\n    if (currentSong === null && songPlaying === null) {\r\n      setCurrentSong(`/${item.file_name}`);\r\n      setSongPlaying(null);\r\n      setSongTitle(item.song_name);\r\n    } else if (currentSong !== null && songPlaying === null) {\r\n      setCurrentSong(null);\r\n      setSongPlaying(`/${item.file_name}`);\r\n      setSongTitle(item.song_name);\r\n    } else if (currentSong === null && songPlaying !== null) {\r\n      setCurrentSong(`/${item.file_name}`);\r\n      setSongPlaying(null);\r\n      setSongTitle(item.song_name);\r\n    } else {\r\n      console.log(\"bad things\");\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"/delete_songs\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const result = await response.json();\r\n\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Song List</h1>\r\n      <button onClick={handleDelete} variant=\"danger\">\r\n        Reset Songs\r\n      </button>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error}</p>}\r\n      <Row>\r\n        <Col>\r\n          <ul>\r\n            {audioList.map((item, index) => (\r\n              <li\r\n                key={index}\r\n                onClick={() => switchSongs(item)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {item.song_name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {(currentSong || songPlaying) && (\r\n            <div>\r\n              <audio ref={audioRef} key={currentSong || songPlaying}>\r\n                <source src={currentSong || songPlaying} type=\"audio/mp4\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n              <p>Selected song: {songTitle}</p>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SongList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}