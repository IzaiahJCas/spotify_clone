{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\PlayButton.js\",\n  _s = $RefreshSig$();\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FaPlay } from \"react-icons/fa\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayButton() {\n  _s();\n  const [audioList, setAudioList] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\n\n  // Fetch the list of audio files from the backend\n  async function fetchAudioList() {\n    const response = await fetch(\"/audio\");\n    const data = await response.json();\n    return data;\n  }\n\n  // Load the audio list when the component mounts\n  useEffect(() => {\n    async function getAudioList() {\n      const list = await fetchAudioList();\n      setAudioList(list);\n    }\n    getAudioList();\n  }, []);\n\n  // Function to handle play button click\n  const handlePlay = filePath => {\n    setSelectedAudio(filePath);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: audioList.map(audio => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handlePlay(audio.file_path),\n          children: [/*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \" \", audio.song_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, audio.file_path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), selectedAudio && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `/audio/${selectedAudio}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayButton, \"a1KYPjS/2T2tCaVR3jHPNqM5UH8=\");\n_c = PlayButton;\nexport default PlayButton;\nvar _c;\n$RefreshReg$(_c, \"PlayButton\");","map":{"version":3,"names":["Button","Col","Container","Row","FaPlay","React","useState","useEffect","jsxDEV","_jsxDEV","PlayButton","_s","audioList","setAudioList","selectedAudio","setSelectedAudio","fetchAudioList","response","fetch","data","json","getAudioList","list","handlePlay","filePath","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","audio","onClick","file_path","song_name","controls","autoPlay","src","type","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/PlayButton.js"],"sourcesContent":["import { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction PlayButton() {\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\r\n\r\n  // Fetch the list of audio files from the backend\r\n  async function fetchAudioList() {\r\n    const response = await fetch(\"/audio\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  // Load the audio list when the component mounts\r\n  useEffect(() => {\r\n    async function getAudioList() {\r\n      const list = await fetchAudioList();\r\n      setAudioList(list);\r\n    }\r\n\r\n    getAudioList();\r\n  }, []);\r\n\r\n  // Function to handle play button click\r\n  const handlePlay = (filePath) => {\r\n    setSelectedAudio(filePath);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Audio Player</h1>\r\n      <div className=\"row\">\r\n        {audioList.map((audio) => (\r\n          <Col key={audio.file_path}>\r\n            <Button onClick={() => handlePlay(audio.file_path)}>\r\n              <FaPlay /> {audio.song_name}\r\n            </Button>\r\n          </Col>\r\n        ))}\r\n      </div>\r\n      {selectedAudio && (\r\n        <audio controls autoPlay>\r\n          <source src={`/audio/${selectedAudio}`} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAC7D,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,eAAeU,cAAcA,CAAA,EAAG;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;IACtC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb;;EAEA;EACAZ,SAAS,CAAC,MAAM;IACd,eAAec,YAAYA,CAAA,EAAG;MAC5B,MAAMC,IAAI,GAAG,MAAMN,cAAc,CAAC,CAAC;MACnCH,YAAY,CAACS,IAAI,CAAC;IACpB;IAEAD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,UAAU,GAAIC,QAAQ,IAAK;IAC/BT,gBAAgB,CAACS,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBd,SAAS,CAACmB,GAAG,CAAEC,KAAK,iBACnBvB,OAAA,CAACR,GAAG;QAAAyB,QAAA,eACFjB,OAAA,CAACT,MAAM;UAACiC,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACS,KAAK,CAACE,SAAS,CAAE;UAAAR,QAAA,gBACjDjB,OAAA,CAACL,MAAM;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAACE,KAAK,CAACG,SAAS;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC,GAHDE,KAAK,CAACE,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLhB,aAAa,iBACZL,OAAA;MAAO2B,QAAQ;MAACC,QAAQ;MAAAX,QAAA,gBACtBjB,OAAA;QAAQ6B,GAAG,EAAE,UAAUxB,aAAa,EAAG;QAACyB,IAAI,EAAC;MAAY;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAE9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CA9CQD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAgDnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}