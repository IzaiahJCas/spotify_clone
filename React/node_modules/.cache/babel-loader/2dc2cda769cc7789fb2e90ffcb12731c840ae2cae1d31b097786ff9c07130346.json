{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\PlayButton.js\",\n  _s = $RefreshSig$();\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FaPlay } from \"react-icons/fa\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayButton() {\n  _s();\n  const [audioList, setAudioList] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\n\n  // Fetch the list of audio files from the backend\n  async function fetchAudioList() {\n    const response = await fetch(\"/audio\");\n    const data = await response.json();\n    return data;\n  }\n\n  // Load the audio list when the component mounts\n  useEffect(() => {\n    async function getAudioList() {\n      const list = await fetchAudioList();\n      setAudioList(list);\n    }\n    getAudioList();\n  }, []);\n\n  // Function to handle play button click\n  const handlePlay = filePath => {\n    setSelectedAudio(filePath);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayButton, \"a1KYPjS/2T2tCaVR3jHPNqM5UH8=\");\n_c = PlayButton;\nexport default PlayButton;\nvar _c;\n$RefreshReg$(_c, \"PlayButton\");","map":{"version":3,"names":["Button","Col","Container","Row","FaPlay","React","useState","useEffect","jsxDEV","_jsxDEV","PlayButton","_s","audioList","setAudioList","selectedAudio","setSelectedAudio","fetchAudioList","response","fetch","data","json","getAudioList","list","handlePlay","filePath","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/PlayButton.js"],"sourcesContent":["import { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction PlayButton() {\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\r\n\r\n  // Fetch the list of audio files from the backend\r\n  async function fetchAudioList() {\r\n    const response = await fetch(\"/audio\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  // Load the audio list when the component mounts\r\n  useEffect(() => {\r\n    async function getAudioList() {\r\n      const list = await fetchAudioList();\r\n      setAudioList(list);\r\n    }\r\n\r\n    getAudioList();\r\n  }, []);\r\n\r\n  // Function to handle play button click\r\n  const handlePlay = (filePath) => {\r\n    setSelectedAudio(filePath);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Button</h1>\r\n      <Row>\r\n        <button>\r\n          <FaPlay />\r\n        </button>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAC7D,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,eAAeU,cAAcA,CAAA,EAAG;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;IACtC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb;;EAEA;EACAZ,SAAS,CAAC,MAAM;IACd,eAAec,YAAYA,CAAA,EAAG;MAC5B,MAAMC,IAAI,GAAG,MAAMN,cAAc,CAAC,CAAC;MACnCH,YAAY,CAACS,IAAI,CAAC;IACpB;IAEAD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,UAAU,GAAIC,QAAQ,IAAK;IAC/BT,gBAAgB,CAACS,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACEf,OAAA,CAACP,SAAS;IAAAuB,QAAA,gBACRhB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA,CAACN,GAAG;MAAAsB,QAAA,eACFhB,OAAA;QAAAgB,QAAA,eACEhB,OAAA,CAACL,MAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAClB,EAAA,CApCQD,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}