{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\PlayButton.js\",\n  _s = $RefreshSig$();\nimport { Button, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FaPlay } from \"react-icons/fa\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayButton() {\n  _s();\n  const [audioList, setAudioList] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\n\n  // Fetch the list of audio files from the backend\n  async function fetchAudioList() {\n    try {\n      const response = await fetch(\"/audio\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setAudioList(data);\n    } catch (error) {\n      console.error(\"Failed to fetch audio list:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchAudioList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedAudio && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `/audio/${selectedAudio}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayButton, \"a1KYPjS/2T2tCaVR3jHPNqM5UH8=\");\n_c = PlayButton;\nexport default PlayButton;\nvar _c;\n$RefreshReg$(_c, \"PlayButton\");","map":{"version":3,"names":["Button","Col","FaPlay","React","useState","useEffect","jsxDEV","_jsxDEV","PlayButton","_s","audioList","setAudioList","selectedAudio","setSelectedAudio","fetchAudioList","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","autoPlay","src","type","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/PlayButton.js"],"sourcesContent":["import { Button, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction PlayButton() {\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [selectedAudio, setSelectedAudio] = useState(\"\");\r\n\r\n  // Fetch the list of audio files from the backend\r\n  async function fetchAudioList() {\r\n    try {\r\n      const response = await fetch(\"/audio\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json();\r\n      setAudioList(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch audio list:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAudioList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Audio Player</h1>\r\n      <div className=\"row\">\r\n        <button>\r\n          <FaPlay />\r\n        </button>\r\n      </div>\r\n      {selectedAudio && (\r\n        <audio controls autoPlay>\r\n          <source src={`/audio/${selectedAudio}`} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,GAAG,QAAQ,iBAAiB;AAC7C,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,eAAeU,cAAcA,CAAA,EAAG;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;MACtC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,YAAY,CAACQ,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF;EAEAhB,SAAS,CAAC,MAAM;IACdS,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBjB,OAAA;QAAAiB,QAAA,eACEjB,OAAA,CAACL,MAAM;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLhB,aAAa,iBACZL,OAAA;MAAOsB,QAAQ;MAACC,QAAQ;MAAAN,QAAA,gBACtBjB,OAAA;QAAQwB,GAAG,EAAE,UAAUnB,aAAa,EAAG;QAACoB,IAAI,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAE9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAtCQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}