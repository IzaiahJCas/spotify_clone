{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donut\\\\spotify_clone\\\\src\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const handleSearch = async () => {\n    const userInput = document.getElementById(\"song-search\").value;\n    const response = await fetch(\"/YoutubeAudioDownload\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: `song-search=${userInput}`\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setMessage(data.message || \"Download Success\");\n    } else {\n      setMessage(data.error || \"Failed to download\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"song-search\",\n      children: \"Find your song:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"song-search\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["Col","Container","Row","useState","useEffect","jsxDEV","_jsxDEV","SearchBar","_s","message","setMessage","handleSearch","userInput","document","getElementById","value","response","fetch","method","headers","body","data","json","ok","error","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/donut/spotify_clone/src/SearchBar.js"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction SearchBar() {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSearch = async () => {\r\n    const userInput = document.getElementById(\"song-search\").value;\r\n    const response = await fetch(\"/YoutubeAudioDownload\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: `song-search=${userInput}`,\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      setMessage(data.message || \"Download Success\");\r\n    } else {\r\n      setMessage(data.error || \"Failed to download\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <label htmlFor=\"song-search\">Find your song:</label>\r\n      <Row>\r\n        <Col>\r\n          <input className=\"form-control\" id=\"song-search\" type=\"text\" />\r\n        </Col>\r\n        <Col>\r\n          <button onClick={handleSearch}>Search</button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE,eAAeR,SAAS;IAChC,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfb,UAAU,CAACW,IAAI,CAACZ,OAAO,IAAI,kBAAkB,CAAC;IAChD,CAAC,MAAM;MACLC,UAAU,CAACW,IAAI,CAACG,KAAK,IAAI,oBAAoB,CAAC;IAChD;EACF,CAAC;EAED,oBACElB,OAAA,CAACL,SAAS;IAAAwB,QAAA,gBACRnB,OAAA;MAAOoB,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpDxB,OAAA,CAACJ,GAAG;MAAAuB,QAAA,gBACFnB,OAAA,CAACN,GAAG;QAAAyB,QAAA,eACFnB,OAAA;UAAOyB,SAAS,EAAC,cAAc;UAACC,EAAE,EAAC,aAAa;UAACC,IAAI,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACNxB,OAAA,CAACN,GAAG;QAAAyB,QAAA,eACFnB,OAAA;UAAQ4B,OAAO,EAAEvB,YAAa;UAAAc,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACtB,EAAA,CAlCQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}